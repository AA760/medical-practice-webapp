{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Farooq\\\\Documents\\\\GitHub\\\\cs2001-2020_21-group-36-1\\\\healthchecker\\\\healthchecker-frontend\\\\src\\\\Components\\\\Patients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './Patients.css';\nimport Loader from 'react-loader-spinner';\nimport axios from 'axios';\nexport default function Patients() {\n  _s();\n\n  const [data, updateData] = React.useState([]);\n  const [patientinfo, setPatientInfo] = React.useState([]); //const [output, setOutput] = React.useState(\"\");\n\n  const [patientID, setPatientId] = React.useState(\"\");\n  const [responsePatientID, setResponsePatientId] = React.useState(\"\");\n\n  const patientId = event => setPatientId(event.target.value); //stores currently logged in user's ID\n\n\n  const [currentId, setCurrentId] = React.useState(\"\");\n  let isLoading = true;\n  axios({\n    method: 'get',\n    url: '/patients'\n  }).then(res => {\n    console.log(res);\n    var stringResponse = JSON.stringify(res.data);\n    var arrayResponse = stringResponse.split('{'); //var patientResponse = arrayResponse[2].split(',');\n\n    var patientResponse;\n    var patientId1; //var realPatientId=0;\n\n    var i = 0;\n\n    for (i = 1; i < arrayResponse.length; i++) {\n      patientResponse = arrayResponse[i].split(',');\n      patientId1 = patientResponse[2].split('\"patient_Id\":');\n      var realPatientId = parseInt(patientId1[1]);\n      setResponsePatientId(realPatientId);\n    } //setOutput(patientID);\n\n  });\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: '/patients'\n    }).then(res => {\n      console.log(res);\n      updateData(res.data);\n    });\n  }, []); //retrieves ID of the user currently logged in\n\n  axios({\n    method: 'get',\n    url: '/id'\n  }).then(response => {\n    console.log(response);\n    var cId = JSON.stringify(response.data);\n    setCurrentId(cId);\n  }, error => {\n    console.log(error);\n    setCurrentId(\"Please log in first!\");\n  });\n  if (patientID == responsePatientID) isLoading = false;\n  const [description, setDescription] = React.useState(\"\");\n  const [output, setOutput] = React.useState(\"\");\n\n  const Description = event => setDescription(event.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" Patient Records \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Patient id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"patientid\",\n            name: \"patientid\",\n            placeholder: \"Type your patient ID\",\n            onChange: patientId,\n            children: \"        \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 124\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      \"aria-label\": \"Table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Patient ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DOB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Record ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data === null || data === void 0 ? void 0 : data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.dob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.dor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.address_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.user_Id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.record_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 10\n          }, this)]\n        }, row.patient_Id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Patients, \"jqgPBKzeeByTkPaxkulthXg67OI=\");\n\n_c = Patients;\n\nvar _c;\n\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"sources":["C:/Users/Farooq/Documents/GitHub/cs2001-2020_21-group-36-1/healthchecker/healthchecker-frontend/src/Components/Patients.js"],"names":["React","useEffect","Loader","axios","Patients","data","updateData","useState","patientinfo","setPatientInfo","patientID","setPatientId","responsePatientID","setResponsePatientId","patientId","event","target","value","currentId","setCurrentId","isLoading","method","url","then","res","console","log","stringResponse","JSON","stringify","arrayResponse","split","patientResponse","patientId1","i","length","realPatientId","parseInt","response","cId","error","description","setDescription","output","setOutput","Description","map","row","dob","dor","address_id","phone","user_Id","record_id","patient_Id"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport './Patients.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function Patients() {\r\n\tconst [data, updateData] = React.useState([]);\r\n\tconst [patientinfo, setPatientInfo] = React.useState([]);\r\n\t//const [output, setOutput] = React.useState(\"\");\r\n\tconst [patientID, setPatientId] = React.useState(\"\");\r\n\r\n\tconst [responsePatientID, setResponsePatientId] = React.useState(\"\");\r\n\tconst patientId = event => setPatientId(event.target.value);\r\n\t\r\n\t//stores currently logged in user's ID\r\n\tconst [currentId, setCurrentId] = React.useState(\"\");\r\n\r\n\t\r\n\tlet isLoading = true;\r\n\t\r\n\t\r\n\t\r\n\r\naxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/patients',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t  \r\n\t\tvar stringResponse = JSON.stringify(res.data)\r\n\t\tvar arrayResponse = stringResponse.split('{')\r\n\t\t//var patientResponse = arrayResponse[2].split(',');\r\n\t\tvar patientResponse;\r\n\t\tvar patientId1;\r\n\t\t//var realPatientId=0;\r\n\t\tvar i = 0;\r\n\t\tfor (i = 1; i < arrayResponse.length; i++) \r\n\t\t\t{\r\n\t\t\t\tpatientResponse = arrayResponse[i].split(',');\r\n\t\t\t\tpatientId1 = patientResponse[2].split('\"patient_Id\":');\r\n\r\n\t\t\t\tvar realPatientId = parseInt(patientId1[1]);\r\n\t\t\t\tsetResponsePatientId(realPatientId);\r\n\r\n\t\t\t}\r\n\t\t\t//setOutput(patientID);\r\n  \t\t});\r\n\tuseEffect(() => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/patients',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tupdateData(res.data)\r\n\r\n\t\t});\r\n\t}, []);\r\n\t\r\n\t  \r\n\t//retrieves ID of the user currently logged in\r\n\t  axios({\r\n      method: 'get',\r\n      url: '/id',\r\n    })\r\n\t.then((response) => {\r\n\t\tconsole.log(response);\r\n\t\tvar cId = JSON.stringify(response.data);\r\n\t\tsetCurrentId(cId);\r\n\t}, (error) => {\r\n\t\tconsole.log(error);\r\n\t\tsetCurrentId(\"Please log in first!\");\r\n\t\t\r\n\t});\r\n\t\r\n\t\r\n\t\r\n\r\n\tif (patientID==responsePatientID) isLoading = false;\r\n\t\r\n \r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [output, setOutput] = React.useState(\"\");\r\n  const Description = event => setDescription(event.target.value);\r\n \r\n\t\r\n\t\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\r\n\t\t\r\n\t\t  \r\n\t\t\t\t\r\n\t\t\t\t\t<h3> Patient Records </h3>\r\n\t\t\t<table>\r\n\t\t\t\t<tr> \r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\tPatient id:\r\n                \t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<textarea id=\"patientid\" name=\"patientid\" placeholder=\"Type your patient ID\" onChange={patientId}>     \t\t\t</textarea><br></br>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t<button>\r\n\t\t\t\tSearch\r\n\t\t\t\t</button>\r\n\t\t\t\t</form> \r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t<table className=\"table\" aria-label=\"Table\">\r\n\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Patient ID</th>\r\n\t\t\t\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t\t\t\t<th>DOB</th>\r\n\t\t\t\t\t\t\t\t<th>DOR</th>\r\n\t\t\t\t\t\t\t\t<th>Address id</th>\r\n\t\t\t\t\t\t\t\t<th>Phone</th>\r\n\t\t\t\t\t\t\t\t<th>User ID</th>\r\n\t\t\t\t\t\t\t\t<th>Record ID</th>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\r\n<div>\r\n      <div className=\"container\" >\r\n        \r\n\r\n        \r\n\r\n            \r\n\r\n          \r\n        \r\n       \r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data?.map(row => (\r\n\t\t\t\t\t\t\t\t<tr key={row.patient_Id}>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.dob}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.dor}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.address_id}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.phone}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.user_Id}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.record_id}</td>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\r\n\t\t</div>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}