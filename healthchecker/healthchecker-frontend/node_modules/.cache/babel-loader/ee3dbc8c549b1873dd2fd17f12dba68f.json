{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abdul\\\\OneDrive\\\\Documents\\\\GitHub\\\\cs2001-2020_21-group-36-1\\\\healthchecker\\\\healthchecker-frontend\\\\src\\\\Components\\\\ViewPatientPreviousAppointments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './viewPatientPreviousAppointments.css';\nimport Loader from 'react-loader-spinner';\nimport axios from 'axios';\nexport default function ViewJob() {\n  _s();\n\n  const [data, updateData] = React.useState([]);\n  const [patientinfo, setPatientInfo] = React.useState([]); //const [output, setOutput] = React.useState(\"\");\n\n  const [patientID, setPatientId] = React.useState(\"\");\n  const [responsePatientID, setResponsePatientId] = React.useState(\"\");\n\n  const patientId = event => setPatientId(event.target.value);\n\n  let isLoading = true;\n  axios({\n    method: 'get',\n    url: '/meetingarchive'\n  }).then(res => {\n    console.log(res);\n    var stringResponse = JSON.stringify(res.data);\n    var arrayResponse = stringResponse.split('{'); //var patientResponse = arrayResponse[2].split(',');\n\n    var patientResponse;\n    var patientId1; //var realPatientId=0;\n\n    var i = 0;\n\n    for (i = 1; i < arrayResponse.length; i++) {\n      patientResponse = arrayResponse[i].split(',');\n      patientId1 = patientResponse[2].split('\"patient_Id\":');\n      var realPatientId = parseInt(patientId1[1]);\n      setResponsePatientId(realPatientId);\n    } //setOutput(patientID);\n\n  });\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: '/meetingarchive'\n    }).then(res => {\n      console.log(res);\n      updateData(res.data);\n    });\n  }, []);\n  axios({\n    method: 'get',\n    url: '/id'\n  }).then(response => {\n    console.log(response);\n    var currentId = response;\n  }, error => {\n    console.log(error);\n  });\n  if (patientID == responsePatientID) isLoading = false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Patient ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"patientId\",\n            name: \"patientId\",\n            placeholder: \"Type your patient ID\",\n            onChange: patientId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 107\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#2BAD60\",\n      height: \"100\",\n      width: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      \"aria-label\": \"Table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appointments' Reason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appointment Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data === null || data === void 0 ? void 0 : data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.reason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            align: \"left\",\n            children: row.date_Time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 10\n          }, this)]\n        }, row.meeting_archive_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ViewJob, \"kOuORLZYyVCZUZpTcCngrp+Xh2c=\");\n\n_c = ViewJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewJob\");","map":{"version":3,"sources":["C:/Users/abdul/OneDrive/Documents/GitHub/cs2001-2020_21-group-36-1/healthchecker/healthchecker-frontend/src/Components/ViewPatientPreviousAppointments.js"],"names":["React","useEffect","Loader","axios","ViewJob","data","updateData","useState","patientinfo","setPatientInfo","patientID","setPatientId","responsePatientID","setResponsePatientId","patientId","event","target","value","isLoading","method","url","then","res","console","log","stringResponse","JSON","stringify","arrayResponse","split","patientResponse","patientId1","i","length","realPatientId","parseInt","response","currentId","error","map","row","reason","date_Time","meeting_archive_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport './viewPatientPreviousAppointments.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\n\r\nexport default function ViewJob() {\r\n\tconst [data, updateData] = React.useState([]);\r\n\tconst [patientinfo, setPatientInfo] = React.useState([]);\r\n\t//const [output, setOutput] = React.useState(\"\");\r\n\tconst [patientID, setPatientId] = React.useState(\"\");\r\n\r\n\tconst [responsePatientID, setResponsePatientId] = React.useState(\"\");\r\n\tconst patientId = event => setPatientId(event.target.value);\r\n\r\n\t\r\n\tlet isLoading = true;\r\n\r\naxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t  \r\n\t\tvar stringResponse = JSON.stringify(res.data)\r\n\t\tvar arrayResponse = stringResponse.split('{')\r\n\t\t//var patientResponse = arrayResponse[2].split(',');\r\n\t\tvar patientResponse;\r\n\t\tvar patientId1;\r\n\t\t//var realPatientId=0;\r\n\t\tvar i = 0;\r\n\t\tfor (i = 1; i < arrayResponse.length; i++) \r\n\t\t\t{\r\n\t\t\t\tpatientResponse = arrayResponse[i].split(',');\r\n\t\t\t\tpatientId1 = patientResponse[2].split('\"patient_Id\":');\r\n\r\n\t\t\t\tvar realPatientId = parseInt(patientId1[1]);\r\n\t\t\t\tsetResponsePatientId(realPatientId);\r\n\r\n\t\t\t}\r\n\t\t\t//setOutput(patientID);\r\n  \t\t});\r\n\tuseEffect(() => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tupdateData(res.data)\r\n\r\n\t\t});\r\n\t}, []);\r\n\t\r\n\t   axios({\r\n      method: 'get',\r\n      url: '/id',\r\n    })\r\n\t.then((response) => {\r\n\t\tconsole.log(response);\r\n\tvar currentId = response;\r\n\t}, (error) => {\r\n\t\tconsole.log(error);\r\n\t});\r\n\t\r\n\t\r\n\r\n\tif (patientID==responsePatientID) isLoading = false;\r\n\t\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\tPatient ID:\r\n                \t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<textarea id=\"patientId\" name=\"patientId\" placeholder=\"Type your patient ID\" onChange={patientId} /><br></br>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table\" aria-label=\"Table\">\r\n\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Appointments' Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Appointment Date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data?.map(row => (\r\n\t\t\t\t\t\t\t\t<tr key={row.meeting_archive_id}>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.reason}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.date_Time}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}