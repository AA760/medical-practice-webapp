[{"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js":"1","C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js":"3","C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js":"4","C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js":"5","C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js":"6","C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js":"7","C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js":"8","C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js":"9","C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js":"10","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js":"11","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js":"12","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js":"13","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js":"14","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js":"15","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js":"16","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js":"17","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js":"18","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1044,"mtime":1610311898387,"results":"23","hashOfConfig":"21"},{"size":2233,"mtime":1610313300601,"results":"24","hashOfConfig":"21"},{"size":4260,"mtime":1610311952091,"results":"25","hashOfConfig":"21"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":1044,"mtime":1610311898387,"results":"29","hashOfConfig":"27"},{"size":4260,"mtime":1610311952091,"results":"30","hashOfConfig":"27"},{"size":2233,"mtime":1610313300601,"results":"31","hashOfConfig":"27"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1733,"mtime":1612891352367,"results":"35","hashOfConfig":"33"},{"size":4260,"mtime":1611325190366,"results":"36","hashOfConfig":"33"},{"size":2232,"mtime":1613953816283,"results":"37","hashOfConfig":"33"},{"size":2773,"mtime":1613507746793,"results":"38","hashOfConfig":"33"},{"size":2727,"mtime":1611924217770,"results":"39","hashOfConfig":"33"},{"size":1305,"mtime":1611924217769,"results":"40","hashOfConfig":"33"},{"size":8280,"mtime":1611924217768,"results":"41","hashOfConfig":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mip1m0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lrb0vi",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"s1ke39",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js",["84"],"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\user-authentication\\git\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js",["85"],"C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js",[],"C:\\Users\\abdul\\OneDrive\\Desktop\\UpdatedHealthChecker\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js",[],["86","87"],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js",["88","89","90","91"],"import React, { useEffect } from \"react\";\r\nimport './viewPatientPreviousAppointments.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\n\r\nexport default function ViewJob() {\r\n\tconst [data, updateData] = React.useState([]);\r\n\tconst [patientinfo, setPatientInfo] = React.useState([]);\r\n\t//const [output, setOutput] = React.useState(\"\");\r\n\tconst [patientID, setPatientId] = React.useState(\"\");\r\n\r\n\tconst [responsePatientID, setResponsePatientId] = React.useState(\"\");\r\n\tconst patientId = event => setPatientId(event.target.value);\r\n\t\r\n\t//stores currently logged in user's ID\r\n\tconst [currentId, setCurrentId] = React.useState(\"\");\r\n\r\n\t\r\n\tlet isLoading = true;\r\n\r\naxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t  \r\n\t\tvar stringResponse = JSON.stringify(res.data)\r\n\t\tvar arrayResponse = stringResponse.split('{')\r\n\t\t//var patientResponse = arrayResponse[2].split(',');\r\n\t\tvar patientResponse;\r\n\t\tvar patientId1;\r\n\t\t//var realPatientId=0;\r\n\t\tvar i = 0;\r\n\t\tfor (i = 1; i < arrayResponse.length; i++) \r\n\t\t\t{\r\n\t\t\t\tpatientResponse = arrayResponse[i].split(',');\r\n\t\t\t\tpatientId1 = patientResponse[2].split('\"patient_Id\":');\r\n\r\n\t\t\t\tvar realPatientId = parseInt(patientId1[1]);\r\n\t\t\t\tsetResponsePatientId(realPatientId);\r\n\r\n\t\t\t}\r\n\t\t\t//setOutput(patientID);\r\n  \t\t});\r\n\tuseEffect(() => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tupdateData(res.data)\r\n\r\n\t\t});\r\n\t}, []);\r\n\t\r\n\t  \r\n\t//retrieves ID of the user currently logged in\r\n\t  axios({\r\n      method: 'get',\r\n      url: '/id',\r\n    })\r\n\t.then((response) => {\r\n\t\tconsole.log(response);\r\n\t\tvar cId = JSON.stringify(response.data);\r\n\t\tsetCurrentId(cId);\r\n\t}, (error) => {\r\n\t\tconsole.log(error);\r\n\t\tsetCurrentId(\"Please log in first!\");\r\n\t\t\r\n\t});\r\n\t\r\n\t\r\n\t\r\n\r\n\tif (patientID==responsePatientID) isLoading = false;\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\tPatient ID:\r\n                \t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<textarea id=\"patientId\" name=\"patientId\" placeholder=\"Type your patient ID\" onChange={patientId}>     \t\t\t</textarea><br></br>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table\" aria-label=\"Table\">\r\n\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Appointments' Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Appointment Date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data?.map(row => (\r\n\t\t\t\t\t\t\t\t<tr key={row.meeting_archive_id}>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.reason}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.date_Time}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}","C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js",[],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js",[],["92","93"],"C:\\Users\\abdul\\OneDrive\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js",["94"],"import React from \"react\";\r\nimport './patientRegister1.css';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function PatientRegister1(){\r\n  //Define two states\r\n  //1. The content entered in the texbox in the form\r\n  //2. Output to be displayed to the user\r\n  // const [data, updateData] = React.useState([]);\r\n  const [line1, setLine1] = React.useState(\"\");\r\n  const [line2, setLine2] = React.useState(\"\");\r\n  const [postcode, setPostcode] = React.useState(\"\");\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [output, setOutput] = React.useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [role, setRole] = React.useState(\"\");\r\n  const [firstName, setFirstName] = React.useState(\"\");\r\n  const [lastName, setLastName] = React.useState(\"\");\r\n  const [dob, setDOB] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n\r\n  const [USERID, setUSERID] = React.useState(0);\r\n  const [ADDRESSID, setADDRESSID] = React.useState(0);\r\n  // const [output, setOutput] = React.useState(\"\");\r\n\r\n  //Arrow function to handle content change\r\n  const Line1 = event => setLine1(event.target.value);\r\n  const Line2 = event => setLine2(event.target.value);\r\n  const Postcode = event => setPostcode(event.target.value);\r\n  const City = event => setCity(event.target.value);\r\n  const Country = event => setCountry(event.target.value);\r\n\r\n  const user_name = event => setUserName(event.target.value);\r\n  const Password = event => setPassword(event.target.value);\r\n  const Role = event => setRole(event.target.value);\r\n\r\n  const FirstName = event => setFirstName(event.target.value);\r\n  const LastName = event => setLastName(event.target.value);\r\n  const DOB = event => setDOB(event.target.value);\r\n  const Phone = event => setPhone(event.target.value);\r\n\r\n\r\n  //ToDo: Arrow function to handle form submission on pressing Save button\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n      let one = \"/address\";\r\n      let two= \"/user\";\r\n      let three=\"/patient\";\r\n      const requestOne = axios.post(one,{\r\n        \"line1\": line1,\r\n        \"line2\": line2,\r\n        \"postcode\": postcode,\r\n        \"city\": city,\r\n        \"country\": country\r\n      });\r\n      const requestTwo = axios.post(two,{\r\n        \"user_name\": userName,\r\n        \"password\": password,\r\n        \"roles\": role,\r\n        \"active\": \"true\"\r\n      });\r\n      \r\n\r\n      axios.all([requestOne, requestTwo])\r\n      .then((response) => {\r\n        console.log(response);\r\n      //  setOutput(\"Job ad successfully added\");\r\n      }, (error) => {\r\n        console.log(error);\r\n        // setOutput(\"Job ad failed\");\r\n      });\r\n      \r\n      axios({\r\n      method: 'get',\r\n      url: '/user',\r\n      }).then(res => {\r\n      console.log(res);\r\n\r\n      // updateData(res.data)\r\n      var stringResponse = JSON.stringify(res.data)\r\n        var arrayResponse = stringResponse.split(',');\r\n        var idResponse = arrayResponse[(arrayResponse.length)-5].split('{\"id\":');\r\n        var id=idResponse[1];\r\n        var idNumber=parseInt(idResponse[1]);\r\n        var realuserid=idNumber+2;\r\n\r\n        \r\n\r\n        var roleResponse = arrayResponse[(arrayResponse.length)-2].split('\"roles\":\"');\r\n        var roleResponse1 = roleResponse[1].split('\"');\r\n        var role = roleResponse1[0];\r\n        if(role===\"ROLE_PATIENT\")\r\n        {\r\n          setUSERID(realuserid)\r\n        }\r\n        else\r\n        {\r\n          setUSERID(\"NULL\")\r\n        }\r\n        // setOutput(USERID)\r\n      });\r\n\r\n      axios({\r\n      method: 'get',\r\n      url: '/address',\r\n      }).then(res => {\r\n      console.log(res);\r\n\r\n      // updateData(res.data)\r\n        var stringResponse = JSON.stringify(res.data)\r\n        var arrayResponse = stringResponse.split(',')\r\n        var addressResponse = arrayResponse[(arrayResponse.length)-1].split('\"addressid\":');\r\n        var address=addressResponse[1].split('}]');\r\n        var addressIdNumber=parseInt(address);\r\n        var realAddressid=addressIdNumber+2;\r\n        setADDRESSID(realAddressid)\r\n\r\n\r\n      });\r\n      axios.post(three,{\r\n        \"firstName\": firstName,\r\n        \"lastName\": lastName,\r\n        \"dob\": dob,\r\n        \"addressId\": ADDRESSID,\r\n        \"phone\": phone,\r\n        \"user_Id\": USERID\r\n      }).then((response) => {\r\n        console.log(response);\r\n      setOutput(\"Your data is successful saved\");\r\n      }, (error) => {\r\n        console.log(error);\r\n        setOutput(USERID);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        \r\n\r\n        <div className=\"box\"> \r\n          <form className=\"form\" noValidate>\r\n            <br></br>\r\n            <table>\r\n              <tr>\r\n                <td>\r\n                  Username: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"userName\" name=\"userName\" placeholder=\"Type your user name\" onChange={user_name} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Password: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"password\" name=\"password\" placeholder=\"Type your password\" onChange={Password} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Line1: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"line1\" name=\"line1\" placeholder=\"Type your address line1\" onChange={Line1} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Line2: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"line2\" name=\"password\" placeholder=\"Type your address line2\" onChange={Line2} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Postcode: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"postcode\" name=\"postcode\" placeholder=\"Type your postcode\" onChange={Postcode}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  City: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"city\" name=\"city\" placeholder=\"Type your city\" onChange={City}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Country: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"country\" name=\"country\" placeholder=\"Type your country\" onChange={Country}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  First Name:\r\n                </td>\r\n                <td>\r\n                  <textarea id=\"firstName\" name=\"firstName\" placeholder=\"Type your first name\" onChange={FirstName}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Last Name:\r\n                </td>\r\n                <td>\r\n                  <textarea id=\"lastName\" name=\"lastName\" placeholder=\"Type your last name\" onChange={LastName}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Date of Birth: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"dob\" name=\"dob\" placeholder=\"Type your date of birth with year-month-day format\" onChange={DOB}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Phone: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"phone\" name=\"phone\" placeholder=\"Type your phone number\" onChange={Phone}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Role:\r\n                </td>\r\n                <td>\r\n                  <input type=\"radio\" value=\"ROLE_PATIENT\" name=\"role\" onChange={Role}/> Patient\r\n                </td>\r\n              </tr>\r\n            </table>\r\n\r\n            <button className=\"button\" onClick={handleSubmit}>Next</button>\r\n\r\n          </form>\r\n        </div>\r\n        <div className=\"box\">\r\n          <p>{output}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"95","severity":1,"message":"96","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":8,"column":9,"nodeType":"97","messageId":"98","endLine":8,"endColumn":20},{"ruleId":"95","severity":1,"message":"104","line":8,"column":22,"nodeType":"97","messageId":"98","endLine":8,"endColumn":36},{"ruleId":"95","severity":1,"message":"105","line":16,"column":9,"nodeType":"97","messageId":"98","endLine":16,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":75,"column":15,"nodeType":"108","messageId":"109","endLine":75,"endColumn":17},{"ruleId":"99","replacedBy":"110"},{"ruleId":"101","replacedBy":"111"},{"ruleId":"95","severity":1,"message":"112","line":87,"column":13,"nodeType":"97","messageId":"98","endLine":87,"endColumn":15},"no-unused-vars","'springlogo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'patientinfo' is assigned a value but never used.","'setPatientInfo' is assigned a value but never used.","'currentId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["113"],["114"],"'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]