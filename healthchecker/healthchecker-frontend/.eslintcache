[{"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\index.js":"1","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\App.js":"3","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js":"4","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js":"5","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js":"6","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js":"7","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js":"8","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js":"9","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\DoctorRegister.js":"10"},{"size":500,"mtime":1614958908000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1614958908000,"results":"13","hashOfConfig":"12"},{"size":1935,"mtime":1615415280313,"results":"14","hashOfConfig":"12"},{"size":2629,"mtime":1614958908000,"results":"15","hashOfConfig":"12"},{"size":2134,"mtime":1614958908000,"results":"16","hashOfConfig":"12"},{"size":2302,"mtime":1614958908000,"results":"17","hashOfConfig":"12"},{"size":8057,"mtime":1615346545363,"results":"18","hashOfConfig":"12"},{"size":4082,"mtime":1615431135257,"results":"19","hashOfConfig":"12"},{"size":1305,"mtime":1614958908000,"results":"20","hashOfConfig":"12"},{"size":6451,"mtime":1615414656721,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"fjeyvn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\index.js",[],["45","46"],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\App.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js",["47","48","49"],"import React, { useEffect } from \"react\";\r\nimport './viewPatientPreviousAppointments.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\n\r\nexport default function ViewJob() {\r\n\tconst [data, updateData] = React.useState([]);\r\n\tconst [patientinfo, setPatientInfo] = React.useState([]);\r\n\t//const [output, setOutput] = React.useState(\"\");\r\n\tconst [patientID, setPatientId] = React.useState(\"\");\r\n\r\n\tconst [responsePatientID, setResponsePatientId] = React.useState(\"\");\r\n\tconst patientId = event => setPatientId(event.target.value);\r\n\r\n\t\r\n\tlet isLoading = true;\r\n\r\naxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t  \r\n\t\tvar stringResponse = JSON.stringify(res.data)\r\n\t\tvar arrayResponse = stringResponse.split('{')\r\n\t\t//var patientResponse = arrayResponse[2].split(',');\r\n\t\tvar patientResponse;\r\n\t\tvar patientId1;\r\n\t\t//var realPatientId=0;\r\n\t\tvar i = 0;\r\n\t\tfor (i = 1; i < arrayResponse.length; i++) \r\n\t\t\t{\r\n\t\t\t\tpatientResponse = arrayResponse[i].split(',');\r\n\t\t\t\tpatientId1 = patientResponse[2].split('\"patient_Id\":');\r\n\r\n\t\t\t\tvar realPatientId = parseInt(patientId1[1]);\r\n\t\t\t\tsetResponsePatientId(realPatientId);\r\n\r\n\t\t\t}\r\n\t\t\t//setOutput(patientID);\r\n  \t\t});\r\n\tuseEffect(() => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tupdateData(res.data)\r\n\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (patientID==responsePatientID) isLoading = false;\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\tPatient ID:\r\n                \t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<textarea id=\"patientId\" name=\"patientId\" placeholder=\"Type your patient ID\" onChange={patientId} /><br></br>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table\" aria-label=\"Table\">\r\n\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Appointments' Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Appointment Date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data?.map(row => (\r\n\t\t\t\t\t\t\t\t<tr key={row.meeting_archive_id}>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.reason}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.date_Time}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js",["50"],"import React from \"react\";\nimport './patientRegister1.css';\nimport axios from 'axios';\n\n\nexport default function PatientRegister1(){\n  //Define two states\n  //1. The content entered in the texbox in the form\n  //2. Output to be displayed to the user\n  // const [data, updateData] = React.useState([]);\n  const [line1, setLine1] = React.useState(\"\");\n  const [line2, setLine2] = React.useState(\"\");\n  const [postcode, setPostcode] = React.useState(\"\");\n  const [city, setCity] = React.useState(\"\");\n  const [country, setCountry] = React.useState(\"\");\n  const [output, setOutput] = React.useState(\"\");\n  const [userName, setUserName] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [role, setRole] = React.useState(\"\");\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [dob, setDOB] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const [USERID, setUSERID] = React.useState(0);\n  const [ADDRESSID, setADDRESSID] = React.useState(0);\n  // const [output, setOutput] = React.useState(\"\");\n\n  //Arrow function to handle content change\n  const Line1 = event => setLine1(event.target.value);\n  const Line2 = event => setLine2(event.target.value);\n  const Postcode = event => setPostcode(event.target.value);\n  const City = event => setCity(event.target.value);\n  const Country = event => setCountry(event.target.value);\n\n  const user_name = event => setUserName(event.target.value);\n  const Password = event => setPassword(event.target.value);\n  const Role = event => setRole(event.target.value);\n\n  const FirstName = event => setFirstName(event.target.value);\n  const LastName = event => setLastName(event.target.value);\n  const DOB = event => setDOB(event.target.value);\n  const Phone = event => setPhone(event.target.value);\n\n\n  //ToDo: Arrow function to handle form submission on pressing Save button\n  const handleSubmit = event => {\n    event.preventDefault();\n\n      let one = \"/address\";\n      let two= \"/user\";\n      let three=\"/patient\";\n      const requestOne = axios.post(one,{\n        \"line1\": line1,\n        \"line2\": line2,\n        \"postcode\": postcode,\n        \"city\": city,\n        \"country\": country\n      });\n      const requestTwo = axios.post(two,{\n        \"user_name\": userName,\n        \"password\": password,\n        \"roles\": role,\n        \"active\": \"true\"\n      });\n      \n\n      axios.all([requestOne, requestTwo])\n      .then((response) => {\n        console.log(response);\n      //  setOutput(\"Job ad successfully added\");\n      }, (error) => {\n        console.log(error);\n        // setOutput(\"Job ad failed\");\n      });\n      \n      axios({\n      method: 'get',\n      url: '/user',\n      }).then(res => {\n      console.log(res);\n\n      // updateData(res.data)\n      var stringResponse = JSON.stringify(res.data)\n        var arrayResponse = stringResponse.split(',');\n        var idResponse = arrayResponse[(arrayResponse.length)-5].split('{\"id\":');\n        var id=idResponse[1];\n        var idNumber=parseInt(idResponse[1]);\n        var realuserid=idNumber+2;\n\n        \n\n        var roleResponse = arrayResponse[(arrayResponse.length)-2].split('\"roles\":');\n        var roleResponse1 = roleResponse[1].split('\"');\n        //var roleResponse1 = roleResponse[1];\n        var role = roleResponse1[0];\n        if(role===\"ROLE_PATIENT\")\n        {\n          setUSERID(realuserid)\n        }\n        else\n        {\n          setUSERID(\"NULL\")\n        }\n        // setOutput(USERID)\n      });\n\n      axios({\n      method: 'get',\n      url: '/address',\n      }).then(res => {\n      console.log(res);\n\n      // updateData(res.data)\n        var stringResponse = JSON.stringify(res.data)\n        var arrayResponse = stringResponse.split(',')\n        var addressResponse = arrayResponse[(arrayResponse.length)-1].split('\"addressid\":');\n        var address=addressResponse[1].split('}]');\n        var addressIdNumber=parseInt(address);\n        var realAddressid=addressIdNumber+2;\n        setADDRESSID(realAddressid)\n\n\n      });\n      axios.post(three,{\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"dob\": dob,\n        \"addressId\": ADDRESSID,\n        \"phone\": phone,\n        \"user_Id\": USERID\n      }).then((response) => {\n        console.log(response);\n      setOutput(\"Your data is successful saved\");\n      }, (error) => {\n        console.log(error);\n        setOutput(USERID);\n      });\n  };\n\n\n  return (\n    <div>\n      <div className=\"container\">\n        \n\n        <div className=\"box\"> \n          <form className=\"form\" noValidate>\n            <br></br>\n            <table>\n              <tr>\n                <td>\n                  Username: \n                </td>\n                <td>\n                  <textarea id=\"userName\" name=\"userName\" placeholder=\"Type your user name\" onChange={user_name} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Password: \n                </td>\n                <td>\n                  <textarea id=\"password\" name=\"password\" placeholder=\"Type your password\" onChange={Password} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Line1: \n                </td>\n                <td>\n                  <textarea id=\"line1\" name=\"line1\" placeholder=\"Type your address line1\" onChange={Line1} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Line2: \n                </td>\n                <td>\n                  <textarea id=\"line2\" name=\"password\" placeholder=\"Type your address line2\" onChange={Line2} />\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Postcode: \n                </td>\n                <td>\n                  <textarea id=\"postcode\" name=\"postcode\" placeholder=\"Type your postcode\" onChange={Postcode}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  City: \n                </td>\n                <td>\n                  <textarea id=\"city\" name=\"city\" placeholder=\"Type your city\" onChange={City}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Country: \n                </td>\n                <td>\n                  <textarea id=\"country\" name=\"country\" placeholder=\"Type your country\" onChange={Country}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  First Name:\n                </td>\n                <td>\n                  <textarea id=\"firstName\" name=\"firstName\" placeholder=\"Type your first name\" onChange={FirstName}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Last Name:\n                </td>\n                <td>\n                  <textarea id=\"lastName\" name=\"lastName\" placeholder=\"Type your last name\" onChange={LastName}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Date of Birth: \n                </td>\n                <td>\n                  <textarea id=\"dob\" name=\"dob\" placeholder=\"Type your date of birth with year-month-day format\" onChange={DOB}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Phone: \n                </td>\n                <td>\n                  <textarea id=\"phone\" name=\"phone\" placeholder=\"Type your phone number\" onChange={Phone}/>\n                </td>\n              </tr>\n\n              <tr>\n                <td>\n                  Role:\n                </td>\n                <td>\n                  <input type=\"radio\" value=\"ROLE_PATIENT\" name=\"role\" onChange={Role}/> Patient\n                </td>\n              </tr>\n            </table>\n\n            <button className=\"button\" onClick={handleSubmit}>Next</button>\n\n          </form>\n        </div>\n        <div className=\"box\">\n          <p>{output}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js",[],"C:\\Users\\Firdaws\\eclipse-workspace2\\healthchecker\\healthchecker-frontend\\src\\Components\\DoctorRegister.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":8,"column":9,"nodeType":"57","messageId":"58","endLine":8,"endColumn":20},{"ruleId":"55","severity":1,"message":"59","line":8,"column":22,"nodeType":"57","messageId":"58","endLine":8,"endColumn":36},{"ruleId":"60","severity":1,"message":"61","line":53,"column":15,"nodeType":"62","messageId":"63","endLine":53,"endColumn":17},{"ruleId":"55","severity":1,"message":"64","line":87,"column":13,"nodeType":"57","messageId":"58","endLine":87,"endColumn":15},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'patientinfo' is assigned a value but never used.","Identifier","unusedVar","'setPatientInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]