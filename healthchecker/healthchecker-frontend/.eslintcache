[{"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js":"1","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js":"2","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js":"4","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js":"5","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js":"6","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js":"7","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js":"8","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js":"9","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\DoctorRegister.js":"10","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\Patients.js":"11"},{"size":513,"mtime":1616112684717,"results":"12","hashOfConfig":"13"},{"size":2131,"mtime":1616594180957,"results":"14","hashOfConfig":"13"},{"size":373,"mtime":1616112684717,"results":"15","hashOfConfig":"13"},{"size":2233,"mtime":1616678396360,"results":"16","hashOfConfig":"13"},{"size":8286,"mtime":1616678396360,"results":"17","hashOfConfig":"13"},{"size":1303,"mtime":1615484641181,"results":"18","hashOfConfig":"13"},{"size":2727,"mtime":1616583914433,"results":"19","hashOfConfig":"13"},{"size":4263,"mtime":1615484641176,"results":"20","hashOfConfig":"13"},{"size":2302,"mtime":1615484641184,"results":"21","hashOfConfig":"13"},{"size":5712,"mtime":1615484641178,"results":"22","hashOfConfig":"13"},{"size":3581,"mtime":1616678790561,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zmhaw8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\index.js",[],["50","51"],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\App.js",["52","53"],"import React, { Component } from \"react\";\r\nimport { Link, Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport Register from \"./Components/PatientRegister1\";\r\nimport DoctorRegister from \"./Components/DoctorRegister\";\r\nimport Login from \"./Components/UserLogin\";\r\nimport ViewJob from \"./Components/ViewPatientPreviousAppointments\";\r\nimport Patients from \"./Components/Patients\";\r\nimport UploadVideosAndArticles from \"./Components/UploadVideosAndArticles\";\r\nimport SortVideosAndArticles from \"./Components/SortVideosAndArticlesByTime\";\r\nimport AdminManageAccount from \"./Components/AdminManageAccount\";\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 className=\"header\">Health Checker application</h1>\r\n\t\t\t\t\t<nav className=\"topnav\">\r\n\t\t\t\t\t\t<Link to={'/'} className=\"nav-link\">Login Page</Link>\r\n\t\t\t\t\t\t<Link to={'/register'} className=\"nav-link\">Patient Register</Link>\r\n\t\t\t\t\t\t<Link to={'/Patients'} className=\"nav-link\">Patient Records</Link>\r\n\t\t\t\t\t\t//<Link to={'/DoctorRegister'} className=\"nav-link\">Doctor Register</Link>\r\n\t\t\t\t\t\t<Link to={'/view'} className=\"nav-link\">View Previous Appointments</Link>\r\n\t\t\t\t\t\t<Link to={'/uploadVideosAndArticles'} className=\"nav-link\">Upload Videos And Articles</Link>\r\n\t\t\t\t\t\t<Link to={'/sortVideosAndArticles'} className=\"nav-link\">Sort Videos And Articles</Link>\r\n\t\t\t\t\t\t<Link to={'/adminManageAccounts'} className=\"nav-link\">Admin - Manage Accounts</Link>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path='/' component={Login} />\r\n\t\t\t\t\t\t<Route exact path='/register' component={Register} />\r\n\t\t\t\t\t\t<Route exact path='/patients' component={Patients} />\r\n\t\t\t\t\t\t//<Route path='/DoctorRegister' component={DoctorRegister} />\r\n\t\t\t\t\t\t<Route path='/view' component={ViewJob} />\r\n\t\t\t\t\t\t<Route path='/uploadVideosAndArticles' component={UploadVideosAndArticles} />\r\n\t\t\t\t\t\t<Route path='/sortVideosAndArticles' component={SortVideosAndArticles} />\r\n\t\t\t\t\t\t<Route path='/adminManageAccounts' component={AdminManageAccount} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UserLogin.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\PatientRegister1.js",["54"],"import React from \"react\";\r\nimport './patientRegister1.css';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function PatientRegister1(){\r\n  //Define two states\r\n  //1. The content entered in the texbox in the form\r\n  //2. Output to be displayed to the user\r\n  // const [data, updateData] = React.useState([]);\r\n  const [line1, setLine1] = React.useState(\"\");\r\n  const [line2, setLine2] = React.useState(\"\");\r\n  const [postcode, setPostcode] = React.useState(\"\");\r\n  const [city, setCity] = React.useState(\"\");\r\n  const [country, setCountry] = React.useState(\"\");\r\n  const [output, setOutput] = React.useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [role, setRole] = React.useState(\"\");\r\n  const [firstName, setFirstName] = React.useState(\"\");\r\n  const [lastName, setLastName] = React.useState(\"\");\r\n  const [dob, setDOB] = React.useState(\"\");\r\n  const [phone, setPhone] = React.useState(\"\");\r\n\r\n  const [USERID, setUSERID] = React.useState(0);\r\n  const [ADDRESSID, setADDRESSID] = React.useState(0);\r\n  // const [output, setOutput] = React.useState(\"\");\r\n\r\n  //Arrow function to handle content change\r\n  const Line1 = event => setLine1(event.target.value);\r\n  const Line2 = event => setLine2(event.target.value);\r\n  const Postcode = event => setPostcode(event.target.value);\r\n  const City = event => setCity(event.target.value);\r\n  const Country = event => setCountry(event.target.value);\r\n\r\n  const user_name = event => setUserName(event.target.value);\r\n  const Password = event => setPassword(event.target.value);\r\n  const Role = event => setRole(event.target.value);\r\n\r\n  const FirstName = event => setFirstName(event.target.value);\r\n  const LastName = event => setLastName(event.target.value);\r\n  const DOB = event => setDOB(event.target.value);\r\n  const Phone = event => setPhone(event.target.value);\r\n\r\n\r\n  //ToDo: Arrow function to handle form submission on pressing Save button\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n      let one = \"/address\";\r\n      let two= \"/user\";\r\n      let three=\"/patient\";\r\n      const requestOne = axios.post(one,{\r\n        \"line1\": line1,\r\n        \"line2\": line2,\r\n        \"postcode\": postcode,\r\n        \"city\": city,\r\n        \"country\": country\r\n      });\r\n      const requestTwo = axios.post(two,{\r\n        \"user_name\": userName,\r\n        \"password\": password,\r\n        \"roles\": role,\r\n        \"active\": \"true\"\r\n      });\r\n      \r\n\r\n      axios.all([requestOne, requestTwo])\r\n      .then((response) => {\r\n        console.log(response);\r\n      //  setOutput(\"Job ad successfully added\");\r\n      }, (error) => {\r\n        console.log(error);\r\n        // setOutput(\"Job ad failed\");\r\n      });\r\n      \r\n      axios({\r\n      method: 'get',\r\n      url: '/user',\r\n      }).then(res => {\r\n      console.log(res);\r\n\r\n      // updateData(res.data)\r\n      var stringResponse = JSON.stringify(res.data)\r\n        var arrayResponse = stringResponse.split(',');\r\n        var idResponse = arrayResponse[(arrayResponse.length)-5].split('{\"id\":');\r\n        var id=idResponse[1];\r\n        var idNumber=parseInt(idResponse[1]);\r\n        var realuserid=idNumber+2;\r\n\r\n        \r\n\r\n        var roleResponse = arrayResponse[(arrayResponse.length)-2].split('\"roles\":');\r\n        var roleResponse1 = roleResponse[1].split('\"');\r\n        //var roleResponse1 = roleResponse[1];\r\n        var role = roleResponse1[0];\r\n        if(role===\"ROLE_PATIENT\")\r\n        {\r\n          setUSERID(realuserid)\r\n        }\r\n        else\r\n        {\r\n          setUSERID(\"NULL\")\r\n        }\r\n        // setOutput(USERID)\r\n      });\r\n\r\n      axios({\r\n      method: 'get',\r\n      url: '/address',\r\n      }).then(res => {\r\n      console.log(res);\r\n\r\n      // updateData(res.data)\r\n        var stringResponse = JSON.stringify(res.data)\r\n        var arrayResponse = stringResponse.split(',')\r\n        var addressResponse = arrayResponse[(arrayResponse.length)-1].split('\"addressid\":');\r\n        var address=addressResponse[1].split('}]');\r\n        var addressIdNumber=parseInt(address);\r\n        var realAddressid=addressIdNumber+2;\r\n        setADDRESSID(realAddressid)\r\n\r\n\r\n      });\r\n      axios.post(three,{\r\n        \"firstName\": firstName,\r\n        \"lastName\": lastName,\r\n        \"dob\": dob,\r\n        \"addressId\": ADDRESSID,\r\n        \"phone\": phone,\r\n        \"user_Id\": USERID\r\n      }).then((response) => {\r\n        console.log(response);\r\n      setOutput(\"Your data is successful saved\");\r\n      }, (error) => {\r\n        console.log(error);\r\n        setOutput(USERID);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        \r\n\r\n        <div className=\"box\"> \r\n          <form className=\"form\" noValidate>\r\n            <br></br>\r\n            <table>\r\n              <tr>\r\n                <td>\r\n                  Username: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"userName\" name=\"userName\" placeholder=\"Type your user name\" onChange={user_name} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Password: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"password\" name=\"password\" placeholder=\"Type your password\" onChange={Password} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Line1: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"line1\" name=\"line1\" placeholder=\"Type your address line1\" onChange={Line1} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Line2: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"line2\" name=\"password\" placeholder=\"Type your address line2\" onChange={Line2} />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Postcode: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"postcode\" name=\"postcode\" placeholder=\"Type your postcode\" onChange={Postcode}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  City: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"city\" name=\"city\" placeholder=\"Type your city\" onChange={City}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Country: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"country\" name=\"country\" placeholder=\"Type your country\" onChange={Country}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  First Name:\r\n                </td>\r\n                <td>\r\n                  <textarea id=\"firstName\" name=\"firstName\" placeholder=\"Type your first name\" onChange={FirstName}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Last Name:\r\n                </td>\r\n                <td>\r\n                  <textarea id=\"lastName\" name=\"lastName\" placeholder=\"Type your last name\" onChange={LastName}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Date of Birth: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"dob\" name=\"dob\" placeholder=\"Type your date of birth with year-month-day format\" onChange={DOB}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Phone: \r\n                </td>\r\n                <td>\r\n                  <textarea id=\"phone\" name=\"phone\" placeholder=\"Type your phone number\" onChange={Phone}/>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  Role:\r\n                </td>\r\n                <td>\r\n                  <input type=\"radio\" value=\"ROLE_PATIENT\" name=\"role\" onChange={Role}/> Patient\r\n                </td>\r\n              </tr>\r\n            </table>\r\n\r\n            <button className=\"button\" onClick={handleSubmit}>Next</button>\r\n\r\n          </form>\r\n        </div>\r\n        <div className=\"box\">\r\n          <p>{output}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\SortVideosAndArticlesByTime.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\UploadVideosAndArticles.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\AdminManageAccount.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\ViewPatientPreviousAppointments.js",["55","56","57"],"import React, { useEffect } from \"react\";\r\nimport './viewPatientPreviousAppointments.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport axios from 'axios';\r\n\r\nexport default function ViewJob() {\r\n\tconst [data, updateData] = React.useState([]);\r\n\tconst [patientinfo, setPatientInfo] = React.useState([]);\r\n\t//const [output, setOutput] = React.useState(\"\");\r\n\tconst [patientID, setPatientId] = React.useState(\"\");\r\n\r\n\tconst [responsePatientID, setResponsePatientId] = React.useState(\"\");\r\n\tconst patientId = event => setPatientId(event.target.value);\r\n\r\n\t\r\n\tlet isLoading = true;\r\n\r\naxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t  \r\n\t\tvar stringResponse = JSON.stringify(res.data)\r\n\t\tvar arrayResponse = stringResponse.split('{')\r\n\t\t//var patientResponse = arrayResponse[2].split(',');\r\n\t\tvar patientResponse;\r\n\t\tvar patientId1;\r\n\t\t//var realPatientId=0;\r\n\t\tvar i = 0;\r\n\t\tfor (i = 1; i < arrayResponse.length; i++) \r\n\t\t\t{\r\n\t\t\t\tpatientResponse = arrayResponse[i].split(',');\r\n\t\t\t\tpatientId1 = patientResponse[2].split('\"patient_Id\":');\r\n\r\n\t\t\t\tvar realPatientId = parseInt(patientId1[1]);\r\n\t\t\t\tsetResponsePatientId(realPatientId);\r\n\r\n\t\t\t}\r\n\t\t\t//setOutput(patientID);\r\n  \t\t});\r\n\tuseEffect(() => {\r\n\t\taxios({\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: '/meetingarchive',\r\n\t\t}).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tupdateData(res.data)\r\n\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif (patientID==responsePatientID) isLoading = false;\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<table>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\tPatient ID:\r\n                \t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<textarea id=\"patientId\" name=\"patientId\" placeholder=\"Type your patient ID\" onChange={patientId} /><br></br>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t{isLoading ? (\r\n\t\t\t\t<Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n\t\t\t) : (\r\n\t\t\t\t\t<table className=\"table\" aria-label=\"Table\">\r\n\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Appointments' Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Appointment Date</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{data?.map(row => (\r\n\t\t\t\t\t\t\t\t<tr key={row.meeting_archive_id}>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.reason}</td>\r\n\t\t\t\t\t\t\t\t\t<td align=\"left\">{row.date_Time}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}","C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\DoctorRegister.js",[],"C:\\Users\\Farooq\\Documents\\GitHub\\cs2001-2020_21-group-36-1\\healthchecker\\healthchecker-frontend\\src\\Components\\Patients.js",["58","59","60","61","62","63","64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":23,"column":73,"nodeType":"74","endLine":24,"endColumn":9},{"ruleId":"72","severity":1,"message":"73","line":34,"column":60,"nodeType":"74","endLine":35,"endColumn":9},{"ruleId":"75","severity":1,"message":"76","line":87,"column":13,"nodeType":"77","messageId":"78","endLine":87,"endColumn":15},{"ruleId":"75","severity":1,"message":"79","line":8,"column":9,"nodeType":"77","messageId":"78","endLine":8,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":8,"column":22,"nodeType":"77","messageId":"78","endLine":8,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":53,"column":15,"nodeType":"83","messageId":"84","endLine":53,"endColumn":17},{"ruleId":"75","severity":1,"message":"85","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":10,"column":9,"nodeType":"77","messageId":"78","endLine":10,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":10,"column":22,"nodeType":"77","messageId":"78","endLine":10,"endColumn":36},{"ruleId":"75","severity":1,"message":"86","line":18,"column":9,"nodeType":"77","messageId":"78","endLine":18,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":80,"column":15,"nodeType":"83","messageId":"84","endLine":80,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":80,"column":36,"nodeType":"77","messageId":"78","endLine":80,"endColumn":45},{"ruleId":"75","severity":1,"message":"88","line":83,"column":10,"nodeType":"77","messageId":"78","endLine":83,"endColumn":21},{"ruleId":"75","severity":1,"message":"89","line":84,"column":10,"nodeType":"77","messageId":"78","endLine":84,"endColumn":16},{"ruleId":"75","severity":1,"message":"90","line":84,"column":18,"nodeType":"77","messageId":"78","endLine":84,"endColumn":27},{"ruleId":"75","severity":1,"message":"91","line":85,"column":9,"nodeType":"77","messageId":"78","endLine":85,"endColumn":20},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'patientinfo' is assigned a value but never used.","'setPatientInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Loader' is defined but never used.","'currentId' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'description' is assigned a value but never used.","'output' is assigned a value but never used.","'setOutput' is assigned a value but never used.","'Description' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]